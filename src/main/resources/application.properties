spring.application.name=person-service
# ========== DATABASE ==========
spring.datasource.url=jdbc:postgresql://localhost:5432/exe
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver
# ========== JPA ==========
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# KAFKA PRODUCER
spring.kafka.producer.acks=1
spring.kafka.producer.retries=3
spring.kafka.producer.properties.retry.backoff.ms=1000
# KAFKA LISTENER
spring.kafka.listener.ack-mode=manual
# ========== LOGGING ==========
logging.level.org.springframework.kafka=DEBUG
logging.level.org.apache.kafka=INFO
spring.kafka.listener.type=batch
spring.kafka.producer.properties.linger.ms=5000
# Liquibase Configuration
spring.liquibase.enabled=true
spring.liquibase.drop-first=false
spring.liquibase.contexts=dev
spring.liquibase.default-schema=public
# JPA Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
# Kafka
spring.kafka.bootstrap-servers=localhost:29092
person.event.kafka.retry.interval=3000
person.event.kafka.retry.attempts=3
# Kafka Consumer
spring.kafka.consumer.bootstrap-servers=${spring.kafka.bootstrap-servers}
spring.kafka.consumer.group-id=person-service
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.netcompany.internal.training.exercise.common.event
# Kafka Producer
spring.kafka.producer.bootstrap-servers=${spring.kafka.bootstrap-servers}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
# Actuator
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always
# Logging
logging.level.com.netcompany.internal.training.exercise=${LOG_LEVEL:INFO}
#  PostgreSQL local
spring.kafka.consumer.max-poll-records=3
spring.kafka.producer.batch-size=16384